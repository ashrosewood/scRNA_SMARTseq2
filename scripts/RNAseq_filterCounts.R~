annoFile = snakemake@params[['anno']]

biotypes <- snakemake@params[['biotypes']]

countsFile <- snakemake@input[['countsFile']]

mito <- snakemake@params[['mito']]

counts <- read.table(file=countsFile, sep = "\t", header = T, skip = 1)

##----------load counts------------#
print("Loading counts table")
print(countsFile)

## must be a tsv or txt tab sep file

counts <- read.table(file=countsFile, sep = "\t", header = T, skip = 1)

##----------load anno------------#
print("Loading annotation table")
print(annoFile)

## load
anno <- get(load(file=annoFile))

test_list <- anno$external_gene_name
names(test_list) <- anno$ensembl_gene_id

counts$Genes <- "Not in anno"

for (i in seq(1:length(counts$Genes))) {
    if (counts$Geneid[i] %in% names(test_list)) {
        counts$Genes[i] <- test_list[counts$Geneid[i]]
    }
}

if(strsplit(biotypes, split='\\,')[[1]]!=""){
    anno.sub <- anno[paste(anno$gene_biotype) %in% strsplit(biotypes, split='\\,')[[1]] ,]
    counts.sub <- counts[paste(counts$Genes) %in% unique(paste(anno.sub$external_gene_name)) , ]
}else{
    print("no biotypes provided")
    counts.sub <- counts
}

if(mito==1){
    print("tossing MT- genes")
    counts.sub <- counts.sub[grep("^MT-", paste(counts.sub$Genes), invert=TRUE), ]
}

counts.sub <- subset(counts.sub, Genes != "Not in anno")

write.table(counts.sub, file=sub(".txt", ".filt.txt", countsFile), sep="\t", quote=FALSE, row.names=FALSE, col.names=TRUE)
